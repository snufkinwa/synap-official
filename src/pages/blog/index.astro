---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import { getCollection } from 'astro:content';

const posts = (await getCollection('blog', (entry) => !entry.data.draft))
  .sort((a, b) => +b.data.pubDate - +a.data.pubDate);
---

<Layout 
	title="Blog - Synaptik Core"
	description="Insights, updates, and thoughts on building verifiable AI systems with persistent memory and enforceable contracts."
	keywords="AI blog, verifiable AI, AI development, cognitive runtime, AI memory, AI contracts"
>
	<Navigation activePage="blog" />

	<!-- Hero Section with Line Pattern Background -->
	<div class="relative min-h-screen overflow-hidden bg-stone-50 flex flex-col">
		<!-- Animated Line Pattern Background -->
		<div class="absolute inset-0 opacity-20">
			<svg class="w-full h-full" xmlns="http://www.w3.org/2000/svg">
				<defs>
					<pattern id="lines" x="0" y="0" width="100%" height="100%">
						<line x1="0" y1="0" x2="100%" y2="100%" stroke="#666" stroke-width="0.5" opacity="0.3"/>
						<line x1="0" y1="10%" x2="95%" y2="100%" stroke="#666" stroke-width="0.5" opacity="0.25"/>
						<line x1="0" y1="20%" x2="90%" y2="100%" stroke="#666" stroke-width="0.5" opacity="0.2"/>
						<line x1="0" y1="30%" x2="85%" y2="100%" stroke="#666" stroke-width="0.5" opacity="0.15"/>
						<line x1="5%" y1="0" x2="100%" y2="95%" stroke="#666" stroke-width="0.5" opacity="0.25"/>
						<line x1="10%" y1="0" x2="100%" y2="90%" stroke="#666" stroke-width="0.5" opacity="0.2"/>
						<line x1="15%" y1="0" x2="100%" y2="85%" stroke="#666" stroke-width="0.5" opacity="0.15"/>
					</pattern>
				</defs>
				<rect width="100%" height="100%" fill="url(#lines)" />
			</svg>
		</div>

		<!-- Content -->
		<main class="relative z-10 max-w-5xl mx-auto px-6 pt-32 pb-16 flex-grow">
			<!-- Header -->
			<header class="mb-20">
				<h1 class="text-5xl md:text-6xl font-bold mb-6 leading-tight">
					Blog
				</h1>
				<p class="text-lg text-gray-700 max-w-2xl">
					Insights, updates, and thoughts on building verifiable AI systems with persistent memory and enforceable contracts.
				</p>
			</header>

			<!-- Blog Posts -->
			<section class="space-y-12">
				{posts.map((post) => {
					const href = `/blog/${post.slug}`;
					const date = new Date(post.data.pubDate).toLocaleDateString('en-US', { dateStyle: 'long' });
					return (
						<article class="border-b border-gray-300 pb-12 hover:bg-white/50 transition-colors p-6 -mx-6 rounded-lg">
							<time class="text-sm text-gray-500 mb-3 block">{date}</time>
							<h2 class="text-3xl font-bold mb-4">
								<a href={href} class="hover:opacity-70 transition-opacity">
									{post.data.title}
								</a>
							</h2>
							{post.data.description && (
								<p class="text-gray-700 text-lg leading-relaxed mb-4">
									{post.data.description}
								</p>
							)}
							<a href={href} class="text-sm font-medium hover:opacity-70 transition-opacity inline-flex items-center">
								Read more →
							</a>
						</article>
					);
				})}
			</section>
		</main>

		<!-- Footer -->
		<footer class="relative z-10 py-8 text-center text-sm text-gray-500 border-t border-gray-200">
			© 2025 Synaptik Core
		</footer>
	</div>
</Layout>
